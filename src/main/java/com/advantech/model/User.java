package com.advantech.model;
// Generated 2017/4/7 下午 02:26:06 by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Identit generated by hbm2java
 */
@Entity
@Table(name = "[User]",
        schema = "dbo",
        catalog = "E_Document"
)
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class User implements java.io.Serializable {

    private int id;
    private Floor floor;
    private Unit unit;
    private String jobnumber;
    private String password;
    private String name;
    private Integer permission;
    private String email;
    private Set<Worktime> worktimesForEeOwnerId = new HashSet<>(0);
    private Set<Worktime> worktimesForQcOwnerId = new HashSet<>(0);
    private Set<Worktime> worktimesForSpeOwnerId = new HashSet<>(0);
    private Set<UserProfile> userProfiles = new HashSet<>(0);

    public User() {
    }

    public User(int id) {
        this.id = id;
    }

    public User(int id, Floor floor, Unit unit, String jobnumber, String password, String name, Integer permission, String email, Set<Worktime> worktimesForEeOwnerId, Set<Worktime> worktimesForQcOwnerId, Set<Worktime> worktimesForSpeOwnerId) {
        this.id = id;
        this.floor = floor;
        this.unit = unit;
        this.jobnumber = jobnumber;
        this.password = password;
        this.name = name;
        this.permission = permission;
        this.email = email;
        this.worktimesForEeOwnerId = worktimesForEeOwnerId;
        this.worktimesForQcOwnerId = worktimesForQcOwnerId;
        this.worktimesForSpeOwnerId = worktimesForSpeOwnerId;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "floor_id")
    public Floor getFloor() {
        return this.floor;
    }

    public void setFloor(Floor floor) {
        this.floor = floor;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "unit_id")
    public Unit getUnit() {
        return this.unit;
    }

    public void setUnit(Unit unit) {
        this.unit = unit;
    }

    @Column(name = "jobnumber", length = 50)
    public String getJobnumber() {
        return this.jobnumber;
    }

    public void setJobnumber(String jobnumber) {
        this.jobnumber = jobnumber;
    }

    @Column(name = "password", length = 50)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Column(name = "name", length = 50)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "permission")
    public Integer getPermission() {
        return this.permission;
    }

    public void setPermission(Integer permission) {
        this.permission = permission;
    }

    @Column(name = "email", length = 100)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @JsonIgnore
    @JsonIgnoreProperties
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userByEeOwnerId")
    public Set<Worktime> getWorktimesForEeOwnerId() {
        return this.worktimesForEeOwnerId;
    }

    public void setWorktimesForEeOwnerId(Set<Worktime> worktimesForEeOwnerId) {
        this.worktimesForEeOwnerId = worktimesForEeOwnerId;
    }

    @JsonIgnore
    @JsonIgnoreProperties
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userByQcOwnerId")
    public Set<Worktime> getWorktimesForQcOwnerId() {
        return this.worktimesForQcOwnerId;
    }

    public void setWorktimesForQcOwnerId(Set<Worktime> worktimesForQcOwnerId) {
        this.worktimesForQcOwnerId = worktimesForQcOwnerId;
    }

    @JsonIgnore
    @JsonIgnoreProperties
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userBySpeOwnerId")
    public Set<Worktime> getWorktimesForSpeOwnerId() {
        return this.worktimesForSpeOwnerId;
    }

    public void setWorktimesForSpeOwnerId(Set<Worktime> worktimesForSpeOwnerId) {
        this.worktimesForSpeOwnerId = worktimesForSpeOwnerId;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "user_user_profile",
            joinColumns = {
                @JoinColumn(name = "user_id")},
            inverseJoinColumns = {
                @JoinColumn(name = "user_profile_id")})
    public Set<UserProfile> getUserProfiles() {
        return userProfiles;
    }

    public void setUserProfiles(Set<UserProfile> userProfiles) {
        this.userProfiles = userProfiles;
    }
}
